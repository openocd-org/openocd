# SPDX-License-Identifier: GPL-2.0-or-later

# FD32M0P: ARM Cortex M0+ based microcontroller by FermionIC Design PVT LTD
# https://github.com/fermionic-design/fd32m0p_sdk

transport select swd

source [find target/swj-dp.tcl]

if { [info exists CHIPNAME] } {
	set _CHIPNAME $CHIPNAME
} else {
	set _CHIPNAME fd32m0p
}

if { [info exists WORKAREASIZE] } {
	set _WORKAREASIZE $WORKAREASIZE
} else {
	set _WORKAREASIZE 0x1000
}

if { [info exists CPUTAPID] } {
	set _CPUTAPID $CPUTAPID
} else {
	set _CPUTAPID 0x6ba02477
}

transport select swd

swj_newdap $_CHIPNAME cpu -expected-id $_CPUTAPID

dap create $_CHIPNAME.dap -chain-position $_CHIPNAME.cpu 
set _TARGETNAME $_CHIPNAME.core
target create $_TARGETNAME cortex_m -dap $_CHIPNAME.dap
$_TARGETNAME cortex_m reset_config sysresetreq 

#TODO: implement flash driver for FD32M0P
# set _FLASH_TARGET $_TARGETNAME
# # Backup the work area. The flash probe runs an algorithm on the target CPU.
# # The flash is probed during gdb connect if gdb_memory_map is enabled (by default).
# $_FLASH_TARGET configure -work-area-phys 0x20000000 -work-area-size $_WORKAREASIZE -work-area-backup 1
# set _FLASHNAME $_CHIPNAME.flash
# flash bank $_FLASHNAME fd32m0p_flash 0x10000000 0 0 0 $_FLASH_TARGET
